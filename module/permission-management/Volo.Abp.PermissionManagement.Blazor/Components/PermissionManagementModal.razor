@using Microsoft.Extensions.Localization
@using Volo.Abp.PermissionManagement.Localization
@inherits Volo.Abp.AspNetCore.Components.AbpComponentBase

<Modal Title="@($"{L["Permissions"]} - {_entityDisplayName}")"
       OnOk="SaveAsync"
       Visible="_showPermissionModal"
       OnCancel="@CloseModal">
        <Checkbox @bind-Value="@GrantAll"
             Indeterminate="@(_groups.Sum(o => o.Permissions.Count(p=>p.IsGranted)) > 0 
                           && _groups.Sum(o => o.Permissions.Count(o => o.IsGranted)) < _groups.Sum(o => o.Permissions.Count()))">@L["SelectAllInAllTabs"]</Checkbox>

    <Divider />
    @if (_groups != null)
    {
        <Tabs TabPosition="TabPosition.Left" @bind-ActiveKey="@_selectedTabName">
            @foreach (var group in _groups)
            {
                <TabPane Key="@group.Name">
                    <TabTemplate>
                        @if (group.Permissions.Any(x => x.IsGranted))
                        {
                            <span>
                                <b>@group.DisplayName ( @(group.Permissions.Count(x => x.IsGranted)) )</b>
                            </span>
                        }
                        else
                        {
                            <span>
                                @group.DisplayName ( @(group.Permissions.Count(x => x.IsGranted)) )
                            </span>
                        }
                    </TabTemplate>
                    <ChildContent>
                        <h4>@group.DisplayName</h4>
                        <Divider />
                        <Checkbox Indeterminate="@(group.Permissions.Count(o => o.IsGranted) > 0
                                                && group.Permissions.Count(o => o.IsGranted) < group.Permissions.Count())"
                          Checked="@(group.Permissions.All(x => x.IsGranted))"
                          ValueChanged="@(b=>GroupGrantAllChanged(b, group))">
                            @L["SelectAllInThisTab"]
                        </Checkbox>
                        <Divider />

                        <Space Direction="DirectionVHType.Vertical">
                        @foreach (var permission in group.Permissions)
                        {
                            <SpaceItem>
                                <Checkbox Style="@(permission.ParentName != null ? "margin-left: 10px":"")" Checked="@permission.IsGranted"
                                    Disabled="@(IsDisabledPermission(permission))"
                                    CheckedChanged="@(b => PermissionChanged(b, group, permission))">
                                    @GetShownName(permission)
                                </Checkbox>
                            </SpaceItem>
                        }
                        </Space>
                    </ChildContent>
                </TabPane>
            }
        </Tabs>
    }
</Modal>